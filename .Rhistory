source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(activity_data)
str(activity_data)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
library(dplyr)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(final_data)
tail(final_data)
dim(final_data)
?hist
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
?hist
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
?hist
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
sum_data$date
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
str(days)
length(days$steps)
length(days$date)
head(days)
head(activity_data)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(days)
head(mean_steps)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(days)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(days)
head(sum_data)
head(days)
head(sum_data)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(sum_data)
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
head(sum_data)
sum_data
?median
source('~/DataScience/Reproducible Research/Week 1/Assignment/steps.R')
sum_data
tail(sum_data)
activity_data$date[2]
x<-c(0,0,5,0,0,13,0,0,0,100,20,0,0,0)
x
median(x)
hist(sum_data$mean_steps, breaks = 10, main = "Histogram of Mean Steps")
?group_by
str(sum_data)
str(days)
head(activity_data)
test<-group_by(activity_data$interval)
test<-group_by(activity_data,interval)
head(test)
plot(activity_data$interval,activity_data$steps, type = "l")
plot(activity_data$interval,mean(activity_data$steps), type = "l")
?for
?for loop
test<-arrange(activity_data, interval)
test
head(test)
test_mean<-mean(test$steps, na.rm = TRUE)
test_mean
plot(test$interval,test$steps, type = "l")
plot(test$interval,mean(test$steps), type = "l")
interval_data<-group_by(activity_data,interval)
str(interval_data)
interval_data<-group_by(activity_data,interval)
interval_data_ave <-summarize(interval_data, ave_steps = mean(steps, na.rm = TRUE))
head(interval_data_ave)
plot(interval_data$interval, interval_data_ave, type = "l", main = "Average Number of Steps", xlab = "Minutes", ylab = "Average Steps")
plot(interval_data_ave$interval, interval_data_ave$ave_steps, type = "l", main = "Average Number of Steps", xlab = "Minutes", ylab = "Average Steps")
?max
max(interval_data_ave)
max(interval_data_ave$ave_steps)
summarize(interval_data_ave, max_steps = max(ave_steps))
?plot
summary(interval_data_ave)
subset(interval_data_ave, ave_steps == 206.170)
test<-subset(interval_data_ave, ave_steps == 206.170)
test
test<-subset(interval_data_ave, ave_steps > 206)
test
test<-summary(interval_data_ave)
test
test<-summary(interval_data_ave$ave_steps)
test
test$Max.
test[2]
test[6]
hold_max<-summary(interval_data_ave) #First find the maximum value
hold_interval<-subset(interval_data_ave, ave_steps >hold_max[6])
hold_interval
hold_max[6]
hold_max<-summary(interval_data_ave$ave_steps) #First find the maximum value
hold_interval<-subset(interval_data_ave, ave_steps >hold_max[6])
hold_interval
hold_max[6]
subset(interval_data_ave, ave_steps > 206)
?which.max
which.max(interval_data_ave)
is.na(activity_data)
mean(is.na(activity_data))
mean(is.na(activity_data$steps))
class(hold_max)
class(ave_steps)
class(interval_data_ave$ave_steps)
hold_max<-summary(interval_data_ave$ave_steps) #First find the maximum value
hold_interval<-subset(interval_data_ave, ave_steps > as.numeric(hold_max[6]))
hold_interval
as.numeric(hold_max[6])
hold_max<-summary(interval_data_ave$ave_steps) #First find the maximum value
hold_interval<-subset(interval_data_ave, ave_steps > as.numeric(hold_max[6])-1)
hold_interval
mean(is.na(activity_data$steps))
complete.cases(activity_data$steps)
?which
count_na <- which(complete.cases(activity_data$steps))
count_na
count_na <- which(is.na(activity_data$steps))
length(count_na)
length(activity_data$steps)
2304/17568
count_na <- length(which(is.na(activity_data$steps)))
count_na
str(interval_data_ave)
?impute
length(activity_data)
head(activity_data)
length(activity_data$steps)
for( i in 1:length(activity_data$steps)) {
if ( is.na(activity_data$steps)) complete_steps<-interval_data_ave$ave_steps
}
warnings()
for( i in 1:length(activity_data$steps)) {
if ( is.na(activity_data$steps[i])) complete_steps<-interval_data_ave$ave_steps[i]
}
head(complete_steps)
for( i in 1:length(activity_data$steps)) {
if ( is.na(activity_data$steps[i])) complete_steps[i]<-interval_data_ave$ave_steps[i]
}
head(complete_steps)
is.na(activity_data$steps[1])
is.na(activity_data$steps[2])
is.na(activity_data$steps[3])
is.na(activity_data$steps[1000])
interval_data_ave$ave_steps[1]
interval_data_ave$ave_steps[2]
length(interval_data_ave$ave_steps)
288*5
head(sum_data)
interval_data_ave$ave_steps
interval_data_ave$interval
source('~/DataScience/Exploratory Data Analysis/ExData_Assignment2/plot5.R')
knit2html()
install.packages("knitr")
install.packages("knitr")
library(knitr)
?version
R.Version()
activity_data$date[1]
interval_data
interval_data_ave
head(activity_data)
str(interval_data_ave)
knit2html()
knit2html(plot5.R)
?knit2html
2400/5
activity_data$interval[480]
activity_data$interval[1]
activity_data$interval[2]
2355/5
activity_data$interval[200]
activity_data$interval[290]
activity_data$interval[288]
str(activity_data)
as.factor(activity_data$interval)
test<-as.factor(activity_data$interval)
head(test)
2355/288
2400/288
2355/5
2400/5
2350/5
?ifelse
?merge
test<-activity_data%>%left_join(interval_data_ave, by = "interval")
head(test)
head(interval_data_ave)
test<-merge(activity_data,interval_data_ave)
head(test)
test<-merge(activity_data,interval_data_ave, sort = FALSE)
head(test)
head(activity_data)
?merge
head(interval_data_ave)
?ifelse
head(test)
new_data<-merge(activity_data,interval_data_ave, sort = FALSE)
mutate(activity_data$steps = ifelse(is.na(new.data$steps), new_data$ave_steps , new.data$steps))
new_data<-merge(activity_data,interval_data_ave, sort = FALSE)
new_activity_data <- mutate(activity_data, steps = ifelse(is.na(new.data$steps), new_data$ave_steps , new.data$steps))
new_data<-merge(activity_data,interval_data_ave, sort = FALSE)
new_activity_data <- mutate(activity_data, steps = ifelse(is.na(new_data$steps), new_data$ave_steps , new_data$steps))
head(new_activity_data)
head(activity_data)
head(new_data)
arrange(new_data, date)
test<-arrange(new_data,date)
head(test)
new_data<-merge(activity_data,interval_data_ave, sort = FALSE)
new_data <- arrange (new_data, date)
new_activity_data <- mutate(activity_data, steps = ifelse(is.na(new_data$steps), new_data$ave_steps , new_data$steps))
head(new_activity_data)
head(new_data)
days <- group_by(new_activity_data, date)
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps")
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
#Histogram of total number of steps taken each day
dev.copy(png, file = "plot1.png")
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps")
dev.off()
days <- group_by(new_activity_data, date)
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
dev.copy(png, file = "plot3.png")
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps")
dev.off()
mean_steps
str(mean_steps)
head(sum_data)
tail(sum_data)
days <- group_by(activity_data, date)
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
str(sum_data)
sum_data
table(sum_data)
?cat
cat(sum_data, file = "Summary Data")
head(sum_data)
?write.table
write.table(sum_data, file="test.txt")
?weekdays
head(new_sum_data)
new_days <- group_by(new_activity_data, date)
new_sum_data <- summarize(new_days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
write.table(new_sum_data, file="new_summary.txt")
dev.copy(png, file = "plot3.png")
par(mfrow=c(1,1))
hist(new_sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps")
dev.off()
head(new_sum_data)
head(interval_data_ave)
length(interval_data_ave)
nrows(interval_data_ave)
nrow(interval_data_ave)
?as.Date
as.Date(new_activity_data$date[1])
x<-as.Date(new_activity_data$date[1])
x
class(x)
?weekdays
weekdays(x)
x<-as.Date("2016-01-10")
weekdays(x)
?weekend
!(weekdays(x) %in% c('Saturday','Sunday'))
new_activity_data <- mutate(new_activity_data,
!(weekdays(as.Date(date)) %in% c('Saturday','Sunday')),
labels=c("weekend", "weekday"))
new_activity_data <- mutate(new_activity_data,
day_of_week = !(weekdays(as.Date(date)) %in% c('Saturday','Sunday')),
labels=c("weekend", "weekday"))
weekdays(x) %in% c('Saturday','Sunday')
x
head(new_activity_data)
new_activity_data <- mutate(new_activity_data,
day_of_week = !(weekdays(as.Date(date)) %in% c('Saturday','Sunday')),
labels=c("weekend", "weekday"))
new_activity_data <- mutate(new_activity_data,
day_of_week = !(weekdays(as.Date(new_activity_data$date)) %in% c('Saturday','Sunday')),
labels=c("weekend", "weekday"))
?mutate
new_activity_data <- mutate(new_activity_data,
day_of_week = factor(!(weekdays(as.Date(date)) %in% c('Saturday','Sunday'))),
labels=c("weekend", "weekday"))
new_activity_data <- mutate(new_activity_data,
day_of_week = factor(!(weekdays(as.Date(date)) %in% c('Saturday','Sunday')))
)
head(new_activity_data)
tail(new_activity_data)
new_activity_data$day_of_week[1728]
new_activity_data <- mutate(new_activity_data,
day_of_week = factor(!(weekdays(as.Date(date)) %in% c('Saturday','Sunday'))),
labels(c("weekend","weekday")))
new_activity_data <- mutate(activity_data, steps = ifelse(is.na(new_data$steps), new_data$ave_steps , new_data$steps))
head(new_activity_data)
data <- mutate(new_activity_data,
day_of_week = ifelse(!(weekdays(as.Date(date)) %in% c('Saturday','Sunday')),
"weekday","weekend"))
head(data)
data$day_of_week[1728]
new_activity_data <- mutate(new_activity_data,
day_of_week = ifelse(!(weekdays(as.Date(date)) %in% c('Saturday','Sunday')),
"weekday","weekend"))
head(new_activity_data)
interval_data <- group_by(new_activity_data,interval)
interval_data_ave <-summarize(interval_data, ave_steps = mean(steps, na.rm = TRUE))
head(interval_data_ave)
weekend_interval_data <- filter(new_activity_data, day_of_week == "weekend")
head(weekend_interval_data)
weekday_interval_data <- filter(new_activity_data, day_of_week == "weekday")
head(weekday_interval_data)
weekend_activity_data <- filter(new_activity_data, day_of_week == "weekend")
weekday_activity_data <- filter(new_activity_data, day_of_week == "weekday")
wend_interval_data <- group_by(weekend_activity_data,interval)
wend_interval_data_ave <-summarize(wend_interval_data, ave_steps = mean(steps))
wday_interval_data <- group_by(weekday_activity_data,interval)
wday_interval_data_ave <-summarize(wday_interval_data, ave_steps = mean(steps))
head(wend_interval_data_ave)
head(wday_interval_data_ave)
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps")
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps")
par(mfrow=c(2,1))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps")
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps")
par(mfrow = c(2,1), mar = c(4,4,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue")
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red")
?plot
par(mfrow = c(2,1), mar = c(3,3,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3)
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red")
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3)
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 2)
par(mfrow = c(2,1), mar = c(3,3,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3)
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 4)
par(mfrow = c(2,1), mar = c(3.5,3.5,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3)
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 3)
?xlim
par(mfrow = c(2,1), mar = c(4,4,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3, ylim = 200)
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 3, ylim = 200)
par(mfrow = c(2,1), mar = c(4,4,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3, ylim = c(200))
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 3, ylim = c(200))
?ylim
par(mfrow = c(2,1), mar = c(4,4,3,3))
plot(wend_interval_data_ave$interval, wend_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekend", xlab = "Minutes", ylab = "Average Steps", col = "blue",
font.main = 3, ylim = c(0,200))
plot(wday_interval_data_ave$interval, wday_interval_data_ave$ave_steps, type = "l", main =
"Average # of Steps on Weekday", xlab = "Minutes", ylab = "Average Steps", col = "red",
font.main = 3, ylim = c(0,200))
?knit2html
activity_file <- "activity.csv"
if(file.exists(activity_file)) {
activity_data <- read.csv(activity_file)
} else {
cat("Activity file does not exist")
stop()
}
days <- group_by(activity_data, date)
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
write.table(sum_data, file="summary.txt")
#Histogram of total number of steps taken each day
dev.copy(png, file = "Hist_steps.png")
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps",
col = "magenta")
dev.off()
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps",
xlim = c(0, 25000), col = "magenta")
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps",
xlim = c(0, 25000), ylim = c(0, 20), col = "magenta")
write.table(sum_data, file="summary.txt", sep = " ")
#Plot time series of 5-minute interval and average number of steps taken across
#all days
interval_data<-group_by(activity_data,interval)
interval_data_ave <-summarize(interval_data, ave_steps = mean(steps))
dev.copy(png, file = "Ave_steps.png")
par(mfrow=c(1,1))
plot(interval_data_ave$interval, interval_data_ave$ave_steps, type = "l",
main = "Average Number of Steps", xlab = "Minutes", ylab = "Average Steps")
dev.off()
interval_data<-group_by(activity_data,interval)
interval_data_ave <-summarize(interval_data, ave_steps = mean(steps, na.rm = TRUE))
dev.copy(png, file = "Ave_steps.png")
par(mfrow=c(1,1))
plot(interval_data_ave$interval, interval_data_ave$ave_steps, type = "l",
main = "Average Number of Steps", xlab = "Minutes", ylab = "Average Steps")
dev.off()
par(mfrow=c(1,1))
plot(interval_data_ave$interval, interval_data_ave$ave_steps, type = "l",
main = "Average Number of Steps", xlab = "Interval", ylab = "Average Steps",
col = "cyan")
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps",
xlim = c(0, 25000), ylim = c(0, 20), col = "magenta")
dev.off()
sum_data
?write
write(sum_data, file="summary.txt")
latex()
install.packages("latex")
head(sum_data, 1:65)
length(sum_data)
dim(sum_data)
cat(sum_data)
?cat
cat(sum_data, file="summary.txt")
sum_data
dim(sum_data)
head(sum_data, 1:61)
?head
head(sum_data, n=61)
summary(sum_data)
This data analysis utilizes data from a personal activity monitoring device that collects data at 5 minute intervals throughout the day. This data (stored in activity.zip) was collected from October through November 2012 from an anonymous individual.
```{r echo = TRUE
activity_file <- "activity.csv"
if(file.exists(activity_file)) {
activity_data <- read.csv(activity_file)
} else {
cat("Activity file does not exist")
stop()
}
}```
activity_file <- "activity.csv"
if(file.exists(activity_file)) {
activity_data <- read.csv(activity_file)
} else {
cat("Activity file does not exist")
stop()
}
setwd("~/DataScience/Reproducible Research/Week 1/Assignment/RepData_PeerAssessment1")
activity_file <- "activity.csv"
if(file.exists(activity_file)) {
activity_data <- read.csv(activity_file)
} else {
cat("Activity file does not exist")
stop()
}
days <- group_by(activity_data, date)
sum_data <- summarize(days, total_steps = sum(steps),
mean_steps = mean(steps), median_steps = median(steps))
par(mfrow=c(1,1))
hist(sum_data$total_steps, breaks = 10, main =
"Histogram of Total Number of Steps", xlab = "Total Number of Steps",
xlim = c(0, 25000), ylim = c(0, 20), col = "magenta")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
sum_sR
sum_data
summary(days)
install.packages("xtable")
xtable(sum_data)
library(xtable)
